--Create statements
CREATE TABLE FORBES_TEAM (
    FORBES_STAFF_ID NUMBER(5) NOT NULL PRIMARY KEY,
    TYPE_OF_STAFF   VARCHAR2(20) NOT NULL
);

CREATE TABLE ARTICLES (
    ARTICLE_NAME    VARCHAR2(100) NOT NULL,
    FORBES_STAFF_ID NUMBER(5) NOT NULL,
    TYPE_OF_ARTICLE VARCHAR2(30) NOT NULL,
    WRITER_NAME     VARCHAR2(30),
    FOREIGN KEY ( FORBES_STAFF_ID )
        REFERENCES FORBES_TEAM ( FORBES_STAFF_ID )
);

CREATE TABLE PEOPLE (
    PEOPLE_ID       NUMBER(7) NOT NULL PRIMARY KEY,
    FORBES_STAFF_ID NUMBER(5),
    PEOPLE_NAME     VARCHAR2(30),
    PEOPLE_CATEGORY VARCHAR2(25),
    FOREIGN KEY ( FORBES_STAFF_ID )
        REFERENCES FORBES_TEAM ( FORBES_STAFF_ID )
);


CREATE TABLE COMPANIES (
    COMPANIES_RANK  NUMBER(5) NOT NULL PRIMARY KEY,
    FORBES_STAFF_ID NUMBER(5) NOT NULL,
    COMPANY_NAME    VARCHAR2(50) NOT NULL,
    COUNTRY         VARCHAR2(30) NOT NULL,
    FOREIGN KEY ( FORBES_STAFF_ID )
        REFERENCES FORBES_TEAM ( FORBES_STAFF_ID )
);

CREATE TABLE US_UNIVERSITIES (
    UNIVERSITY_RANK         NUMBER(4) NOT NULL,
    FORBES_STAFF_ID         NUMBER(5) NOT NULL,
    UNIVERSITY_NAME         VARCHAR2(50) NOT NULL,
    STATE_OF_THE_UNIVERSITY CHAR(2) NOT NULL,
    TYPE_OF_THE_UNIVERSITY  VARCHAR2(20) NOT NULL,
    AVERAGE_GRANT_AID       VARCHAR2(10) NOT NULL,
    AVERAGE_DEBT            VARCHAR2(10) NOT NULL,
    MEDIAN_10_YR_SALARY     VARCHAR2(10) NOT NULL,
    PRIMARY KEY ( UNIVERSITY_RANK ),
    FOREIGN KEY ( FORBES_STAFF_ID )
        REFERENCES FORBES_TEAM ( FORBES_STAFF_ID )
);

CREATE TABLE BILLIONAIRES (
    RANK_OF_BILIONAIRE NUMBER(4) NOT NULL,
    PEOPLE_ID          NUMBER(7),
    BILLIONAIRE_NAME   VARCHAR2(30) NOT NULL,
    AGE                NUMBER(2),
    NET_WORTH          VARCHAR2(10) NOT NULL,
    INDUSTRY           VARCHAR2(25) NOT NULL,
    SOURCE             VARCHAR2(40) NOT NULL,
    COUNTRY            VARCHAR2(30),
    GENDER             CHAR(1),
    TITLE              VARCHAR2(20),
    PRIMARY KEY ( RANK_OF_BILIONAIRE ),
    FOREIGN KEY ( PEOPLE_ID )
        REFERENCES PEOPLE ( PEOPLE_ID )
);

CREATE TABLE MOST_POWERFUL_PEOPLE (
    RANK_OF_MOST_POWERFUL_PEOPLE NUMBER(4) NOT NULL,
    PEOPLE_ID                    NUMBER(7) NOT NULL,
    NAME                         VARCHAR2(25) NOT NULL,
    ORGANIZATION                 VARCHAR2(50),
    AGE                          NUMBER(2),
    PRIMARY KEY ( RANK_OF_MOST_POWERFUL_PEOPLE ),
    FOREIGN KEY ( PEOPLE_ID )
        REFERENCES PEOPLE ( PEOPLE_ID )
);

CREATE TABLE HIGHEST_PAID_ATHELETES (
    RANK_OF_ATHELETES      NUMBER(4) NOT NULL,
    PEOPLE_ID              NUMBER(7) NOT NULL,
    ATHELETE_NAME          VARCHAR2(30) NOT NULL,
    SPORT                  VARCHAR2(25) NOT NULL,
    TOTAL_EARNINGS         VARCHAR2(10) NOT NULL,
    ON_THE_FIELD_EARNINGS  VARCHAR2(10) NOT NULL,
    OFF_THE_FIELD_EARNINGS VARCHAR2(10) NOT NULL,
    PRIMARY KEY ( RANK_OF_ATHELETES ),
    FOREIGN KEY ( PEOPLE_ID )
        REFERENCES PEOPLE ( PEOPLE_ID )
);

CREATE TABLE CELEBRITY_100 (
    RANK_OF_CELEBRITIES NUMBER(4) NOT NULL,
    PEOPLE_ID           NUMBER(7) NOT NULL,
    CELEBRITY_NAME      VARCHAR2(30) NOT NULL,
    AGE                 NUMBER(2),
    EARNINGS            VARCHAR(10),
    CATEGORY            VARCHAR2(50),
    PRIMARY KEY ( RANK_OF_CELEBRITIES ),
    FOREIGN KEY ( PEOPLE_ID )
        REFERENCES PEOPLE ( PEOPLE_ID )
);

--Data load option is used to load the data into tables using csv files ,files are submitted along with queries in zip file.

--Select statements
SELECT
    *
FROM
    FORBES_TEAM;

SELECT
    *
FROM
    PEOPLE;

SELECT
    *
FROM
    ARTICLES;

SELECT
    *
FROM
    US_UNIVERSITIES;

SELECT
    *
FROM
    COMPANIES;

SELECT
    *
FROM
    BILLIONAIRES;

SELECT
    *
FROM
    MOST_POWERFUL_PEOPLE;

SELECT
    *
FROM
    HIGHEST_PAID_ATHELETES;

select * from CELEBRITY_100

--Features
--Feature1
SELECT
    *
FROM
    PEOPLE
WHERE
    PEOPLE_NAME IN (
        SELECT
            PEOPLE_NAME
        FROM
            (
                SELECT
                    PEOPLE_NAME, COUNT(*)
                FROM
                    PEOPLE
                GROUP BY
                    PEOPLE_NAME
                HAVING
                    COUNT(*) > 1
            )
    )
ORDER BY
    PEOPLE_NAME;

--Feature 2
SELECT
    *
FROM
    US_UNIVERSITIES
WHERE
    UNIVERSITY_NAME = 'University of Utah';

--Feature 3
SELECT
    RANK_OF_BILIONAIRE,
    BILLIONAIRE_NAME,
    NET_WORTH,
    SOURCE,
    TITLE
FROM
    BILLIONAIRES
WHERE
    SOURCE IN (
        SELECT
            COMPANY_NAME
        FROM
            COMPANIES
    );